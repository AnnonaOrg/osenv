#TZ UTC
TZ=Asia/Shanghai
#
#
#日志级别  panic fatal error warn info debug trace
LOG_LEVEL=info
#
#
#GIN run mode runmode
SERVER_GIN_RUNMODE=release
#
#
# 服务开放端口 server port :port :8080
SERVER_PORT=8080
#服务网址 server url http://127.0.0.1:8080
SERVER_URL=http://127.0.0.1:8080
#
# Master 主节点（可读写）
# server db redis address
SERVER_DB_REDIS_ADDRESS=127.0.0.1:6379
# server db redis password Redis密码
SERVER_DB_REDIS_PASSWORD=
# server db redis Redis库 0 1 2 3
SERVER_DB_REDIS_DB=0
# Slave 从节点（只读）
# server db redis address
SERVER_DB_REDIS_SLAVE_ADDRESS=127.0.0.1:6379
# server db redis password Redis密码
SERVER_DB_REDIS_SLAVE_PASSWORD=
# server db redis Redis库 0 1 2 3
SERVER_DB_REDIS_SLAVE_DB=0
#
#
#数据库类型, mysql,sqlite,postgres 创建的mysql数据库数据集建议使用utf8mb4
SERVER_DB_TYPE=postgres
#数据库地址，如本地为 127.0.0.1
SERVER_DB_HOST=127.0.0.1
#数据库端口，mysql默认为3306 postgres默认端口为5432 
SERVER_DB_PORT=5432
#数据库连接地址，形式如 数据库域名:端口号
SERVER_DB_ADDRESS=127.0.0.1:5432
#数据库数据表前缀，形式如 数据库域名:端口号
SERVER_DB_TABLE_PREFIX=
#数据库用户名
SERVER_DB_USERNAME=
#数据库用户名密码
SERVER_DB_PASSWORD=
#数据库名称，在mysql或psql中创建的数据库名称
SERVER_DB_NAME=
#
#
# APP API id
APP_TELEGRAM_API_ID=
# APP API Hash
APP_TELEGRAM_API_HASH=
# TDLIB Client Message 摘要
TDLIB_SIMPLE_MESSAGE_ENABLE=
#
#
# manager id
BOT_MANAGER_ID=
# Bot token
BOT_TELEGRAM_TOKEN=
# bot webhook url
BOT_TELEGRAM_WEBHOOK_URL=
# bot admin webhook url
BOT_ADMIN_TELEGRAM_WEBHOOK_URL=
# bot apiproxy url
BOT_TELEGRAM_API_PROXY_URL=
#
#
# notice of feedRichMsg push url https://server.domain
NOTICE_OF_FEEDRICHMSG_PUSH_URL=
# notice of feedRichMsg push url path like   /ws/push/
NOTICE_OF_FEEDRICHMSG_PUSH_URL_PATH=
#
#
# core api 验证token core_api_token
CORE_API_TOKEN=
# core api 验证token(只读权限) core_api_token_readonly
CORE_API_TOKEN_READONLY=
#core api url https://server.domain
CORE_API_URL=
#
#
#平台类型 tele
#PLATFORM_TYPE_TELE
PLATFORM_TYPE_TELE=tele
#
#JWT Secret
JWT_SECRET=
#
#
#支付方式
#EPUSDT 标识
PAYMENT_EPUSDT_API_NAME=USDT
#启用
PAYMENT_EPUSDT_API_ENABLE=false
#EPUSDT 接口地址
PAYMENT_EPUSDT_API_URL=http://127.0.0.1:8000
#EPUSDT 验证密钥
PAYMENT_EPUSDT_API_KEY=
#
#BTCPay 标识
PAYMENT_BTCPAY_API_NAME=BTCPay
#启用
PAYMENT_BTCPAY_API_ENABLE=true
#BTCPay 接口地址
PAYMENT_BTCPAY_API_URL=https://mainnet.demo.btcpayserver.org
#BTCPay 验证密钥
PAYMENT_BTCPAY_API_KEY=
# BTCPay StoreID
PAYMENT_BTCPAY_API_STOREID=
# BTCPay WebhookSecret
PAYMENT_BTCPAY_API_WEBHOOK_SECRET=
#
#CryptAPI 标识
PAYMENT_CRYPTAPI_API_NAME=CryptAPI
#启用
PAYMENT_CRYPTAPI_API_ENABLE=true
#
#易支付 标识
PAYMENT_EASYPAY_API_NAME=EasyPay
#启用
PAYMENT_EASYPAY_API_ENABLE=false
#易支付 接口地址
PAYMENT_EASYPAY_API_URL=
#易支付 商户id
PAYMENT_EASYPAY_API_PID=
#易支付 验证密钥
PAYMENT_EASYPAY_API_KEY=
#易支付 接口请求编码格式 JsonEncode URLEncode
PAYMENT_EASYPAY_REQUEST_BODY_ENCODE=
#易支付 接口请求设备类型
PAYMENT_EASYPAY_API_DEVICE=
#
#BOXCOIN 标识
PAYMENT_BOXCOIN_API_NAME=Boxcoin
#启用
PAYMENT_BOXCOIN_API_ENABLE=false
#BOXCOIN 接口地址
PAYMENT_BOXCOIN_API_URL=
#BOXCOIN api 验证密钥
PAYMENT_BOXCOIN_API_KEY=
#BOXCOIN Webhook 验证密钥
PAYMENT_BOXCOIN_WEBHOOK_KEY=
#
#UmiPay 标识
PAYMENT_UMIPAY_API_NAME=UmiPay
#启用
PAYMENT_UMIPAY_API_ENABLE=false
#接口地址
PAYMENT_UMIPAY_API_URL=
#商户ID
PAYMENT_UMIPAY_API_PID=
#验证密钥
PAYMENT_UMIPAY_API_KEY=
#
#
#MtprotoProxy
MTPROTO_PROXY_SERVER=
MTPROTO_PROXY_PORT=
MTPROTO_PROXY_SECRET=
MTPROTO_PROXY_ENABLE=
#
#Socks5
SOCKS5_PROXY_ENABLE=false
SOCKS5_PROXY_SERVER=
SOCKS5_PROXY_PORT=
SOCKS5_PROXY_USERNAME=
SOCKS5_PROXY_PASSWORD=
#
#
#Fenxiao api url https://server.domain
FENXIAO_API_URL=
#
#
#Tron api
# trongrid api key  通过 https://www.trongrid.io 注册获取
TRONGRID_API_KEY=
#TRON-PRO-API-KEY 通过 https://tronscan.org/#/myaccount/apiKeys/ 注册获取
TRONSCAN_ORG_API_KEY=
#
#
# MQTT 
# MQTT broker
MQTT_BROKER=
MQTT_USERNAME=
MQTT_PASSWORD=
MQTT_TOPIC=
